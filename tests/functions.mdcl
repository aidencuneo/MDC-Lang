NEW ISTYPE
: String
: @
: {
    YIELD TYPE $1 EQ $0;
};

NEW CLI
: String
: {
    YIELD `os.system(${0}.value)`;
};

NEW SPLIT
: String
: * String
: {
    (F1) : ;
    (FA) : ARRAY;
    (FC) : '';

    FOR i : ARRAY $0 : {
        IF $1 < $1 > " \n\t\v\r" HAS i : {
            (FA) : (FA) ADD (FC);
            (FC) : '';
        }:ELSE:{
            (FC) : (FC) ADD i;
        };
    };

    YIELD (FA) ADD (FC);
};

NEW JOIN
: Array
: * String
: {
    (FC) : '';
    FOR i : $0 : {
        (FC) : (FC) ADD i;
        IF $1 : {
            (FC) : (FC) ADD $1;
        };
    };
    IF $1 : {
        (FC) : (FC) SUB [ LEN $1 ];
    };
    YIELD (FC);
};

NEW GETINSTRUCTIONS : {
    (A) : ARRAY;
    (C) : '';

    (0) : 0;
    WHILE (0) LT [ LEN FILE ] : {
        IF FILE INDEX (0) EQ '\' : {
            (A) : (A) ADD (C);
            (C) : '';
        }:ELSE:{
            (C) : (C) ADD [ FILE INDEX (0) ];
        };
        (0) : (0) ADD 1;
    };

    (C) : '';

    (0) : 0;
    WHILE (0) LT [ LEN (A) ] : {
        (1) : (A) INDEX (0);
        IF (1) HAS ':' AND [ NOT (0) ] : {
            (C) : (C) ADD (1) ADD "\n";
        }:ELSE:{
            (C) : (C) ADD 'cd ' ADD (1) ADD "\n";
        };
        (0) : (0) ADD 1;
    };

    YIELD "Instructions to get to this file:\n\n";
    YIELD (C) ADD 'mdcl ' ADD FILE;
};

NEW SPLICE
: String Array
: Integer
: Integer
: {
    YIELD `${0}.value[${1}.value:${2}.value]`;
};

NEW FIND
: String
: String
: {
    YIELD `${0}.value.index(${1}.value)` < $0 HAS $1 > NULL;
};
